{"version":3,"sources":["fullPage/Down.js","fullPage/TitleAndIcons.js","fullPage/About.js","fullPage/Skill.js","Nav.js","App.js","serviceWorker.js","index.js"],"names":["Down","props","style","display","flexDirection","alignItems","justifyContent","marginBottom","transform","maxWidth","onClick","src","Data","icons","down","alt","TitleAndIcons","state","color","this","setState","className","name","onMouseLeave","changeColor","onMouseOver","data","title","subtitle","Object","keys","link","map","key","url","activeClass","to","spy","smooth","offset","duration","Component","About","fontsize","Sections","items","content","Skill","verticalAlign","skill","Content","image","Nav","backgroundColor","href","float","maxHeight","Width","padding","margin","width","height","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ce7c166.chunk.js","sourcesContent":["import React from 'react';\r\nimport Data from '../data.json';\r\nimport './fullPage.css';\r\n    const Down = (props) => {\r\n        return(\r\n            <div style={{  display:\"flex\",\r\n            flexDirection:\"row\",\r\n           alignItems: \"center\",\r\n           justifyContent:\"center\",\r\n            marginBottom:\"-3px\",\r\n            transform:\"translateY(+155px)\",\r\n            maxWidth: \"50px\" }}\r\n            onClick={props.onClick}  >\r\n              <img src={Data.icons.down} alt=\"down\"></img>\r\n           </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default Down;","import React, {Component} from 'react'\r\nimport data from '../data.json';\r\nimport './fullPage.css';\r\nimport { SocialIcon } from 'react-social-icons';\r\nimport Down from './Down'\r\nimport { Link, Element} from 'react-scroll'\r\n\r\nclass TitleAndIcons extends Component{\r\n  state={\r\n    color:'white'\r\n  }\r\n  changeColor(){\r\n       this.setState({\r\n         color: this.state.color === 'yellow'?'white':'yellow' \r\n       })\r\n  }\r\n\r\n  render() {\r\n      return(\r\n       \r\n        <div className=\"fullPage background-blue\">\r\n           <Element name=\"test\" className=\"element\" style={{ transform:\"translateY(-800px)\"}}>\r\n                   \r\n        </Element>   \r\n                 \r\n               \r\n       <h1 style={{\r\n         color:this.state.color\r\n        }}\r\n        onMouseLeave={()=>{\r\n          this.changeColor()\r\n }}\r\n        onMouseOver={()=>{\r\n          this.changeColor()\r\n }}\r\n     \r\n \r\n       >{data.title}</h1>\r\n      <h2 className=\"title\">\r\n      {data.subtitle}\r\n      </h2>\r\n        <div>\r\n             {Object.keys(data.link).map(key => {\r\n               return (\r\n                  <SocialIcon url={data.link[key]} />\r\n                     )\r\n             })\r\n            }\r\n            </div>\r\n          \r\n          <Link activeClass=\"active\" to=\"About\" spy={true} smooth={true} offset={50} duration={500} >\r\n            <Down/> </Link>\r\n           <Element name=\"About\" className=\"element\" style={{ transform:\"translateY(+155px)\"}}>\r\n                   \r\n        </Element>\r\n            </div>\r\n\r\n            \r\n      )\r\n  }\r\n}\r\n\r\nexport default TitleAndIcons;","import React, {Component} from 'react'\r\nimport data from '../data.json';\r\nimport './fullPage.css';\r\nclass About extends Component{\r\nrender(){\r\n    return(\r\n           <div className=\"fullPage second\">\r\n      <h2 style={{fontsize: \"20px\"}}>\r\n         {data.Sections[0].title}\r\n       </h2>\r\n       <h5 style={{fontsize: \"20px\"}}>\r\n         {data.Sections[0].items[0].content}\r\n       </h5>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n}\r\nexport default About;","import React, {Component} from 'react'\r\nimport data from '../data.json';\r\nimport './fullPage.css';\r\nimport { Link,Element} from 'react-scroll'\r\nclass Skill extends Component{\r\nrender(){\r\n    return(\r\n        <div className=\"fullPage third\">\r\n            \r\n            <h2 style={{verticalAlign:\"top\"}}>\r\n                {data.Sections[1].title}\r\n            </h2>\r\n                \r\n                    <div className=\"card-wrapper\">\r\n                   { data.Sections[1].items.map(skill => {\r\n                        return(\r\n                            <div className=\"card\">\r\n                            <div className=\"image-wrapper\">\r\n                                <img alt=\"skill\"  src={skill.Content.image}></img></div>\r\n                                <div className=\"skill-title-wrapper\">\r\n                           <h4>{skill.Content.title}</h4>  \r\n                           <Element name=\"Skill\" className=\"element\" style={{ transform:\"translateY(+155px)\"}}></Element>  \r\n                              </div>\r\n                            </div>\r\n                            \r\n                        )\r\n                        \r\n                    })\r\n                    \r\n                }\r\n           \r\n        </div>\r\n        <Link activeClass=\"active\" to=\"test\" spy={true} smooth={true} offset={50} duration={500} style={{transform:\"translateY(55px)\"}} >\r\n            <img src=\"images/up.png\" alt=\"up\" style={{display:\"flex\",flexDirection:\"row\"}}></img>\r\n            </Link>\r\n         \r\n            </div>\r\n\r\n       \r\n    )\r\n}\r\n    \r\n}\r\n\r\n\r\n\r\nexport default Skill;","import React, {Component} from 'react';\r\nimport './fullPage/fullPage.css';\r\nimport {Link} from 'react-scroll';\r\n\r\nclass Nav extends Component{\r\n    state={\r\n        backgroundColor:'blue'\r\n      }\r\n    changeColor(){\r\n        this.setState({\r\n            \r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"nav\">\r\n                <Link activeClass=\"active\" to=\"Skill\" spy={true} smooth={true} offset={50} duration={500} href=\"#home\" style={{color:\"bisque\"}}>Skills</Link>\r\n                 <Link activeClass=\"active\" to=\"About\" spy={true} smooth={true} offset={50} duration={500} href=\"#About\" style={{color:\"aqua\"}}>About</Link>\r\n                 <button onClick={()=>{\r\n          this.changeColor()}} style={{float:\"left\",maxHeight:\"25px\",Width:\"25px\",padding:\"0px\",margin:\"10px\"}}>\r\n                     <img src=\"images/Change.png\" alt=\"change\"  style={{width:\"25px\",height:\"25px\",padding:\"0px\",margin:\"0px\"}} /></button>\r\n                 \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Nav;","\nimport  React from 'react';\n\nimport './App.css';\nimport TitleAndIcons from './fullPage/TitleAndIcons';\nimport About from './fullPage/About';\nimport Skill from './fullPage/Skill';\nimport Nav from './Nav';\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n    <Nav />\n       <TitleAndIcons />\n       <About />\n       <Skill />\n     \n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}